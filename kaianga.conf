# -*- mode: toml -*-

# Kianga config file

[packages-refresh]
    [[packages-refresh.scripts]]
        prompt = true
        script = ["bin/package-update"]

[packages-git]
    pre-reqs = ["packages-refresh.scripts"]
    [[packages-git.scripts]]
        prompt = true
        script = ["bin/packages", "git"]

[packages-curl]
    pre-reqs = ["packages-refresh.scripts"]
    [[packages-curl.scripts]]
        prompt = true
        script = ["bin/packages", "curl"]

[packages-emacs]
    pre-reqs = ["packages-refresh.scripts"]
    [[packages-emacs.scripts]]
        prompt = true
        script = ["bin/packages", "emacs"]

[packages-python3]
    pre-reqs = ["packages-refresh.scripts"]
    [[packages-python3.scripts]]
        prompt = true
        script = ["bin/packages", "python3"]

[packages-inotify]
    pre-reqs = ["packages-refresh.scripts"]
    [[packages-inotify.scripts]]
        prompt = true
        script = ["bin/packages", "inotify-tools"]

[packages-stow]
    pre-reqs = ["packages-refresh.scripts"]
    [[packages-stow.scripts]]
        prompt = true
        script = ["bin/packages", "stow"]

[packages-wget]
    pre-reqs = ["packages-refresh.scripts"]
    [[packages-wget.scripts]]
        prompt = true
        script = ["bin/packages", "wget"]

[packages-others]
    pre-reqs = ["packages-refresh.scripts"]
    [[packages-others.scripts]]
        prompt = true
        script = ['/bin/bash', '-ic', 'bin/packages "$(cat bin/other-packages)"']

############################################################
########
###
# End of Package updates

[emacs-font]
    pre-reqs = ["packages-wget.scripts"] 
    [[emacs-font.scripts]]
        rerun = false
        prompt = true
        script = ["bin/get-install-spacemacs-font"]

[fail-test]
    pre-reqs = ["packages-refresh.scripts"]
    [[fail-test.scripts]]
        prompt = false
        script = ["grep", "will", "fail"]

# [setup-user]
# if user doesn't exist then do it.

# [install supervisor]
# as root


[my-bin]
    pre-reqs = ["packages-git.scripts"]
    [[my-bin.scripts]]
        prompt = false
        priority = 0
        script = ["bin/gcop", "https://github.com/sierra-alpha/scripts.git", "~/bin/my-bin"]

[stow-dotties]
    pre-reqs = ["packages-git.scripts", "packages-stow.scripts"]
    [[stow-dotties.scripts]]
        prompt = false
        priority = 0
        script = ["bin/gcop", "https://github.com/sierra-alpha/dotfiles.git", "~/dotfiles"]
    [[stow-dotties.scripts]]
        prompt = true
        priority = 1
        script = ["bin/stow-dotties"]
    [[stow-dotties.scripts]]
        prompt = true
        priority = 2
        script = ["bin/append-to-file", "~/.bashrc", "bin/bash/.add-to-bashrc"]

[ssh-key-to-gh]
    pre-reqs = ["stow-dotties.scripts"]
    [[ssh-key-to-gh.scripts]]
        prompt = true
        priority = 0
        script = ["bin/ssh-key-setup"]
    [[ssh-key-to-gh.scripts]]
        prompt = true
        priority = 1
        script = ["bin/ghak", "sierra-alpha", "~/.ssh/id_rsa.pub"]

[private-repos]
    pre-reqs = ["ssh-key-to-gh.scripts"] 
    [[private-repos.scripts]]
        prompt = true
        priority = 0
        script = ["bin/gcop", "https://github.com/sierra-alpha/matapihi.git", "~/dev/matapihi"]
    [[private-repos.scripts]]
        prompt = true
        priority = 0
        script = ["bin/gcop", "https://github.com/sierra-alpha/kaianga.git", "~/dev/kaianga"]

[gitwatch-install]
    pre-reqs = ["stow-dotties.scripts"]
    [[pull-repos.gitwatch]]
        prompt = true
        # prompt = false
        script = ["bin/gcop", "https://github.com/gitwatch/gitwatch.git", "~/src/gitwatch"] 
    [[gitwatch-install.scripts]]
        prompt = true
        # prompt = false
        script = ["install", "-b", "~/src/gitwatch/gitwatch.sh", "~/bin/gitwatch"]

# [configure-supervisor]
